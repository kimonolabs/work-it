#!/usr/bin/env node

var path = require('path');
var workit = require('../');

var argv = require('minimist')(process.argv.slice(2));

var usage = function(message) {
  if (message) {
    console.log('Error:', message);
    console.log('');
  }
  console.log('Usage: work-it [options] <command-name> <worker-file>');
  console.log('Usage: work-it -v');
  console.log('');
  console.log('Version:', workit.version);
  console.log('');
  console.log('Options:');
  console.log('  -c <file>         Config file         [default: workit.json]');
  console.log('  -k <concurrency>  Concurrency level   [default: 1]');
  console.log('');
  
  process.exit(1);
};

if (argv.v) {
  console.log(workit.version);
  process.exit();
}

if (argv._.length !== 2) { usage(); }

var commandName = argv._[0];
var workerFile = path.resolve(process.cwd(), argv._[1]);
var configFile = path.resolve(process.cwd(), argv.c || 'workit.json');

try {
  var worker = workit.configureFromFile(configFile).worker(commandName, workerFile, {concurrency: argv.k});

  worker.start().then(function() {
    console.log('Worker started...');
  });

  process.on('SIGINT', function() {
    console.log('Worker stopping...');
    worker.stop().then(function() {
      console.log('Worker stopped...');
      process.exit();
    });
  });
} catch (err) {
  usage(err.message);
}
